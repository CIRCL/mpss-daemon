#!/bin/sh -e
# Copyright 2010-2013 Intel Corporation.
#
# This program is free software; you can redistribute it and/or modify
# it under the terms of the GNU General Public License, version 2,
# as published by the Free Software Foundation.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
# General Public License for more details.
#
# Disclaimer: The codes contained in these modules may be specific to
# the Intel Software Development Platform codenamed Knights Ferry,
# and the Intel product codenamed Knights Corner, and are not backward
# compatible with other Intel products. Additionally, Intel will NOT
# support the codes or instruction set in future products.
#
# Intel offers no warranty of any kind regarding the code. This code is
# licensed on an "AS IS" basis and Intel is not obligated to provide
# any support, assistance, installation, training, or other services
# of any kind. Intel is also not obligated to provide any updates,
# enhancements or extensions. Intel specifically disclaims any warranty
# of merchantability, non-infringement, fitness for any particular
# purpose, and any other warranty.
#
# Further, Intel disclaims all liability of any kind, including but
# not limited to liability for infringement of any proprietary rights,
# relating to the use of the code, even if Intel is notified of the
# possibility of such liability. Except as expressly stated in an Intel
# license agreement provided with this code and agreed upon with Intel,
# no license, express or implied, by estoppel or otherwise, to any
# intellectual property rights is granted herein.
#
# mpss	Start mpssd.
#
### BEGIN INIT INFO
# Provides: mpss
# Required-Start: $time
# Required-Stop: iptables
# Default-Start: 2 3 4 5
# Default-Stop: 0 1 6
# Short-Description: Intel(R) MPSS control
# Description: Intel(R) MPSS control
### END INIT INFO

PATH="/usr/local/sbin:/usr/local/bin:/sbin:/bin:/usr/sbin:/usr/bin"

. /lib/lsb/init-functions

exec=/usr/sbin/mpssd
sysfs="/sys/class/mic"
knl_modules="mic_host mic_cosm scif vop mic_x100_dma"

start()
{
	[ -x $exec ] || exit 5

	# Ensure the driver is loaded
	[ -d "$sysfs" ] || modprobe mic 2>/dev/null ||
			modprobe -a $knl_modules

	log_action_begin_msg "Starting Intel(R) MPSS"

	if [ "`ps -e | awk '{print $4}' | grep -m 1 mpssd`" = "mpssd" ]; then
		echo
		micctrl -s
		return 0;
	fi

	$exec
	RETVAL=$?
	if [ "$RETVAL" = "0" ]; then
		micctrl -w 1> /dev/null
		RETVAL=$?
	fi

	echo

	log_action_end_msg $RETVAL

	if [ $RETVAL = 0 ]; then
		micctrl -s
	fi

	return $RETVAL
}

stop()
{
	log_action_begin_msg "Shutting down Intel(R) MPSS"

	WAITRET=0
	MPSSD=`pgrep -flx -P 1 $exec | grep -v grep`

	if [ "$MPSSD" = "" ]; then
		echo
		return 0;
	fi

	MPSSDPID=`echo $MPSSD | awk '{print $1}'`
	kill -s QUIT $MPSSDPID > /dev/null 2>/dev/null
	RETVAL=$?

	if [ $RETVAL = 0 ]; then
		micctrl -w 1> /dev/null
		WAITRET=$?
		if [ $WAITRET = 9 ]; then
			log_action_begin_msg "Shutting down Intel(R) MPSS by force"
			micctrl -r 1> /dev/null
			RETVAL=$?
			if [ $RETVAL = 0 ]; then
				micctrl -w 1> /dev/null
				WAITRET=$?
			fi
		fi
	fi

	log_action_end_msg $?
	echo
	return $RETVAL
}

restart()
{
	stop
	start
}

status()
{
	if [ "`ps -e | awk '{print $4}' | grep -m 1 mpssd`" = "mpssd" ]; then
		echo "mpss is running"
		STOPPED=0
	else
		echo "mpss is stopped"
		STOPPED=3
	fi
	return $STOPPED
}

unload()
{
	if [ ! -d "$sysfs" ]; then
		log_action_begin_msg "Removing MIC Module"
		log_action_end_msg $?
		echo
		return
	fi

	stop
	RETVAL=$?

	log_action_begin_msg "Removing MIC Module"

	if [ $RETVAL = 0 ]; then
		sleep 1
		modprobe -r mic 2>/dev/null
		RETVAL=$?
	fi

	if [ $RETVAL = 0 ]; then
		modprobe -r $knl_modules
		RETVAL=$?
	fi

	log_action_end_msg $?
	echo
	return $RETVAL
}

case $1 in
	start)
		start
		;;
	stop)
		stop
		;;
	restart)
		restart
		;;
	status)
		status
		;;
	unload)
		unload
		;;
	*)
		echo $"Usage: $0 {start|stop|restart|status|unload}"
		exit 2
esac

exit $?

